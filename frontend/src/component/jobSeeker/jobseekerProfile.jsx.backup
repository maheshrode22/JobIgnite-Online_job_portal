import React, { useState, useEffect } from "react";
import { PencilSquare, PersonFill, GeoAltFill, TelephoneFill, EnvelopeFill, CalendarFill, GenderAmbiguous, FileEarmarkTextFill, StarFill, BookFill, AwardFill } from "react-bootstrap-icons";
import "../../css/jobSeeker/jobseekerProfile.css";
import { getCompleteProfile, updateSeeker, updateJobSeekerProfile } from "../../Services/SeekerService";

export default function SeekerProfile() {
  const [profile, setProfile] = useState(null);
  const [loading, setLoading] = useState(true);
  const [editing, setEditing] = useState({});
  const [formData, setFormData] = useState({});
  const [error, setError] = useState("");
  const [success, setSuccess] = useState("");

  useEffect(() => {
    loadProfile();
  }, []);

  const loadProfile = async () => {
    try {
      setLoading(true);
      const token = localStorage.getItem("token");
      const userInfo = JSON.parse(atob(token.split('.')[1]));
      
      const response = await getCompleteProfile(userInfo.seeker_id);
      setProfile(response.data);
      setFormData(response.data);
    } catch (error) {
      console.error("Failed to load profile:", error);
      setError("Failed to load profile data");
    } finally {
      setLoading(false);
    }
  };

  const handleEdit = (section) => {
    setEditing({ ...editing, [section]: true });
    setError("");
    setSuccess("");
  };

  const handleCancel = (section) => {
    setEditing({ ...editing, [section]: false });
    setFormData({ ...formData, ...profile });
  };

  const handleInputChange = (field, value) => {
    setFormData({ ...formData, [field]: value });
  };

  const handleSaveBasicInfo = async () => {
    try {
      const updateData = {
        seeker_id: profile.seeker_id,
        name: formData.name,
        email: formData.email,
        phone: formData.phone,
        address_line1: formData.address_line1,
        address_line2: formData.address_line2,
        landmark: formData.landmark,
        pincode: formData.pincode,
        state_id: formData.state_id,
        district_id: formData.district_id,
        city_id: formData.city_id
      };

      await updateSeeker(updateData);
      setProfile({ ...profile, ...updateData });
      setEditing({ ...editing, basicInfo: false });
      setSuccess("Basic information updated successfully!");
    } catch (error) {
      setError("Failed to update basic information");
    }
  };

  const handleSaveProfile = async () => {
    try {
      const updateData = {
        seeker_id: profile.seeker_id,
        gender: formData.gender,
        birth_date: formData.birth_date,
        resume: formData.resume,
        profile_image: formData.profile_image,
        skills: formData.skills,
        hobbies: formData.hobbies,
        languages: formData.languages,
        graduation: formData.graduation,
        graduation_university: formData.graduation_university,
        graduation_year: formData.graduation_year,
        graduation_cgpa: formData.graduation_cgpa,
        post_graduation: formData.post_graduation,
        post_graduation_university: formData.post_graduation_university,
        post_graduation_year: formData.post_graduation_year,
        post_graduation_cgpa: formData.post_graduation_cgpa,
        hsc_year: formData.hsc_year,
        hsc_marks: formData.hsc_marks,
        ssc_year: formData.ssc_year,
        ssc_marks: formData.ssc_marks
      };

      await updateJobSeekerProfile(updateData);
      setProfile({ ...profile, ...updateData });
      setEditing({ ...editing, profileInfo: false });
      setSuccess("Profile information updated successfully!");
    } catch (error) {
      setError("Failed to update profile information");
    }
  };

  if (loading) {
    return (
      <div className="container my-4 text-center">
        <div className="spinner-border" role="status">
          <span className="visually-hidden">Loading...</span>
        </div>
      </div>
    );
  }

  if (!profile) {
    return (
      <div className="container my-4">
        <div className="alert alert-warning">Profile not found. Please complete your registration.</div>
      </div>
    );
  }

  return (
    <div className="container my-4 seeker-profile">
      {/* Success/Error Messages */}
      {success && (
        <div className="alert alert-success alert-dismissible fade show" role="alert">
          {success}
          <button type="button" className="btn-close" onClick={() => setSuccess("")}></button>
        </div>
      )}
      {error && (
        <div className="alert alert-danger alert-dismissible fade show" role="alert">
          {error}
          <button type="button" className="btn-close" onClick={() => setError("")}></button>
        </div>
      )}

      {/* Header Profile Card */}
      <div className="card p-4 mb-4 shadow-sm">
        <div className="d-flex flex-md-row flex-column align-items-center justify-content-between">
          <div className="d-flex align-items-center">
            <div className="profile-avatar me-3">
              {profile.profile_image ? (
                <img src={profile.profile_image} alt="Profile" className="rounded-circle" width="80" height="80" />
              ) : (
                <PersonFill size={60} className="text-muted" />
              )}
            </div>
        <div>
              <h3 className="fw-bold mb-1">{profile.name}</h3>
              <p className="mb-1 text-muted">
                <EnvelopeFill size={14} className="me-2" />
                {profile.email}
              </p>
              <p className="mb-1 text-muted">
                <TelephoneFill size={14} className="me-2" />
                {profile.phone}
              </p>
              <p className="mb-0 text-muted">
                <GeoAltFill size={14} className="me-2" />
                {profile.address_line1}, {profile.address_line2 && `${profile.address_line2}, `}
                {profile.landmark && `${profile.landmark}, `}
                {profile.pincode}
              </p>
            </div>
        </div>
        <button className="btn btn-outline-primary btn-sm mt-3 mt-md-0">
            Recruiter's View
          </button>
        </div>
      </div>

      {/* Basic Information */}
      <div className="card p-4 mb-4 shadow-sm">
        <div className="d-flex justify-content-between align-items-start mb-3">
          <h5 className="fw-semibold mb-0">
            <PersonFill className="me-2" />
            Basic Information
          </h5>
          {!editing.basicInfo ? (
            <button className="btn btn-outline-secondary btn-sm" onClick={() => handleEdit('basicInfo')}>
              <PencilSquare size={14} />
            </button>
          ) : (
            <div>
              <button className="btn btn-success btn-sm me-2" onClick={handleSaveBasicInfo}>
                Save
              </button>
              <button className="btn btn-secondary btn-sm" onClick={() => handleCancel('basicInfo')}>
                Cancel
        </button>
            </div>
          )}
        </div>

        {!editing.basicInfo ? (
          <div className="row">
            <div className="col-md-6">
              <p><strong>Name:</strong> {profile.name}</p>
              <p><strong>Email:</strong> {profile.email}</p>
              <p><strong>Phone:</strong> {profile.phone}</p>
              <p><strong>Gender:</strong> {profile.gender === 1 ? 'Male' : profile.gender === 0 ? 'Female' : 'Not Specified'}</p>
              <p><strong>Birth Date:</strong> {profile.birth_date ? new Date(profile.birth_date).toLocaleDateString() : 'Not specified'}</p>
            </div>
            <div className="col-md-6">
              <p><strong>Address Line 1:</strong> {profile.address_line1 || 'Not specified'}</p>
              <p><strong>Address Line 2:</strong> {profile.address_line2 || 'Not specified'}</p>
              <p><strong>Landmark:</strong> {profile.landmark || 'Not specified'}</p>
              <p><strong>Pincode:</strong> {profile.pincode || 'Not specified'}</p>
              <p><strong>State ID:</strong> {profile.state_id || 'Not specified'}</p>
              <p><strong>District ID:</strong> {profile.district_id || 'Not specified'}</p>
              <p><strong>City ID:</strong> {profile.city_id || 'Not specified'}</p>
            </div>
          </div>
        ) : (
          <div className="row">
            <div className="col-md-6">
              <div className="mb-3">
                <label className="form-label">Name</label>
                <input
                  type="text"
                  className="form-control"
                  value={formData.name || ''}
                  onChange={(e) => handleInputChange('name', e.target.value)}
                />
              </div>
              <div className="mb-3">
                <label className="form-label">Email</label>
                <input
                  type="email"
                  className="form-control"
                  value={formData.email || ''}
                  onChange={(e) => handleInputChange('email', e.target.value)}
                />
              </div>
              <div className="mb-3">
                <label className="form-label">Phone</label>
                <input
                  type="tel"
                  className="form-control"
                  value={formData.phone || ''}
                  onChange={(e) => handleInputChange('phone', e.target.value)}
                />
              </div>
              <div className="mb-3">
                <label className="form-label">Gender</label>
                <select
                  className="form-control"
                  value={formData.gender || ''}
                  onChange={(e) => handleInputChange('gender', e.target.value)}
                >
                  <option value="">Select Gender</option>
                  <option value="1">Male</option>
                  <option value="0">Female</option>
                </select>
              </div>
              <div className="mb-3">
                <label className="form-label">Birth Date</label>
                <input
                  type="date"
                  className="form-control"
                  value={formData.birth_date ? formData.birth_date.split('T')[0] : ''}
                  onChange={(e) => handleInputChange('birth_date', e.target.value)}
                />
              </div>
            </div>
            <div className="col-md-6">
              <div className="mb-3">
                <label className="form-label">Address Line 1</label>
                <input
                  type="text"
                  className="form-control"
                  value={formData.address_line1 || ''}
                  onChange={(e) => handleInputChange('address_line1', e.target.value)}
                />
              </div>
              <div className="mb-3">
                <label className="form-label">Address Line 2</label>
                <input
                  type="text"
                  className="form-control"
                  value={formData.address_line2 || ''}
                  onChange={(e) => handleInputChange('address_line2', e.target.value)}
                />
              </div>
              <div className="mb-3">
                <label className="form-label">Landmark</label>
                <input
                  type="text"
                  className="form-control"
                  value={formData.landmark || ''}
                  onChange={(e) => handleInputChange('landmark', e.target.value)}
                />
              </div>
              <div className="mb-3">
                <label className="form-label">Pincode</label>
                <input
                  type="number"
                  className="form-control"
                  value={formData.pincode || ''}
                  onChange={(e) => handleInputChange('pincode', e.target.value)}
                />
              </div>
              <div className="row">
                <div className="col-4">
                  <div className="mb-3">
                    <label className="form-label">State ID</label>
                    <input
                      type="number"
                      className="form-control"
                      value={formData.state_id || ''}
                      onChange={(e) => handleInputChange('state_id', e.target.value)}
                    />
                  </div>
                </div>
                <div className="col-4">
                  <div className="mb-3">
                    <label className="form-label">District ID</label>
                    <input
                      type="number"
                      className="form-control"
                      value={formData.district_id || ''}
                      onChange={(e) => handleInputChange('district_id', e.target.value)}
                    />
                  </div>
                </div>
                <div className="col-4">
                  <div className="mb-3">
                    <label className="form-label">City ID</label>
                    <input
                      type="number"
                      className="form-control"
                      value={formData.city_id || ''}
                      onChange={(e) => handleInputChange('city_id', e.target.value)}
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>
        )}
      </div>

      {/* Resume & Profile Image */}
      <div className="card p-4 mb-4 shadow-sm">
        <div className="d-flex justify-content-between align-items-start mb-3">
          <h5 className="fw-semibold mb-0">
            <FileEarmarkTextFill className="me-2" />
            Resume & Profile
          </h5>
          {!editing.resumeProfile ? (
            <button className="btn btn-outline-secondary btn-sm" onClick={() => handleEdit('resumeProfile')}>
              <PencilSquare size={14} />
            </button>
          ) : (
          <div>
              <button className="btn btn-success btn-sm me-2" onClick={handleSaveProfile}>
                Save
              </button>
              <button className="btn btn-secondary btn-sm" onClick={() => handleCancel('resumeProfile')}>
                Cancel
              </button>
            </div>
          )}
        </div>

        {!editing.resumeProfile ? (
          <div className="row">
            <div className="col-md-6">
              <p><strong>Resume:</strong> {profile.resume || 'Not uploaded'}</p>
              <p><strong>Profile Image:</strong> {profile.profile_image || 'Not uploaded'}</p>
            </div>
          </div>
        ) : (
          <div className="row">
            <div className="col-md-6">
              <div className="mb-3">
                <label className="form-label">Resume URL/Path</label>
                <input
                  type="text"
                  className="form-control"
                  value={formData.resume || ''}
                  onChange={(e) => handleInputChange('resume', e.target.value)}
                />
              </div>
              <div className="mb-3">
                <label className="form-label">Profile Image URL/Path</label>
                <input
                  type="text"
                  className="form-control"
                  value={formData.profile_image || ''}
                  onChange={(e) => handleInputChange('profile_image', e.target.value)}
                />
              </div>
            </div>
          </div>
        )}
          </div>

      {/* Skills & Interests */}
      <div className="card p-4 mb-4 shadow-sm">
        <div className="d-flex justify-content-between align-items-start mb-3">
          <h5 className="fw-semibold mb-0">
            <StarFill className="me-2" />
            Skills & Interests
          </h5>
          {!editing.skillsInterests ? (
            <button className="btn btn-outline-secondary btn-sm" onClick={() => handleEdit('skillsInterests')}>
              <PencilSquare size={14} />
            </button>
          ) : (
            <div>
              <button className="btn btn-success btn-sm me-2" onClick={handleSaveProfile}>
                Save
              </button>
              <button className="btn btn-secondary btn-sm" onClick={() => handleCancel('skillsInterests')}>
                Cancel
          </button>
        </div>
          )}
      </div>

        {!editing.skillsInterests ? (
          <div>
            <div className="mb-3">
              <strong>Skills:</strong>
              <div className="mt-2">
                {profile.skills ? (
                  profile.skills.split(',').map((skill, index) => (
                    <span key={index} className="badge bg-primary me-2 mb-2">
                      {skill.trim()}
                    </span>
                  ))
                ) : (
                  <span className="text-muted">No skills specified</span>
                )}
              </div>
            </div>
            <div className="mb-3">
              <strong>Hobbies:</strong>
              <p className="mt-1">{profile.hobbies || 'No hobbies specified'}</p>
            </div>
            <div className="mb-3">
              <strong>Languages:</strong>
              <p className="mt-1">{profile.languages || 'No languages specified'}</p>
            </div>
          </div>
        ) : (
          <div>
            <div className="mb-3">
              <label className="form-label">Skills (comma-separated)</label>
              <input
                type="text"
                className="form-control"
                value={formData.skills || ''}
                onChange={(e) => handleInputChange('skills', e.target.value)}
                placeholder="JavaScript, React, Node.js, etc."
              />
            </div>
            <div className="mb-3">
              <label className="form-label">Hobbies</label>
              <textarea
                className="form-control"
                rows="3"
                value={formData.hobbies || ''}
                onChange={(e) => handleInputChange('hobbies', e.target.value)}
                placeholder="Reading, Swimming, Photography, etc."
              />
            </div>
            <div className="mb-3">
              <label className="form-label">Languages</label>
              <input
                type="text"
                className="form-control"
                value={formData.languages || ''}
                onChange={(e) => handleInputChange('languages', e.target.value)}
                placeholder="English, Hindi, Marathi, etc."
              />
            </div>
          </div>
        )}
          </div>

      {/* Education Details */}
      <div className="card p-4 mb-4 shadow-sm">
        <div className="d-flex justify-content-between align-items-start mb-3">
          <h5 className="fw-semibold mb-0">
            <BookFill className="me-2" />
            Education Details
          </h5>
          {!editing.education ? (
            <button className="btn btn-outline-secondary btn-sm" onClick={() => handleEdit('education')}>
              <PencilSquare size={14} />
            </button>
          ) : (
            <div>
              <button className="btn btn-success btn-sm me-2" onClick={handleSaveProfile}>
                Save
              </button>
              <button className="btn btn-secondary btn-sm" onClick={() => handleCancel('education')}>
                Cancel
          </button>
            </div>
          )}
        </div>

        {!editing.education ? (
          <div>
            {/* Graduation */}
            <div className="education-section mb-4">
              <h6 className="fw-semibold text-primary">Graduation</h6>
              <div className="row">
                <div className="col-md-6">
                  <p><strong>Degree:</strong> {profile.graduation || 'Not specified'}</p>
                  <p><strong>University:</strong> {profile.graduation_university || 'Not specified'}</p>
                </div>
                <div className="col-md-6">
                  <p><strong>Year:</strong> {profile.graduation_year || 'Not specified'}</p>
                  <p><strong>CGPA:</strong> {profile.graduation_cgpa || 'Not specified'}</p>
                </div>
              </div>
            </div>

            {/* Post Graduation */}
            <div className="education-section mb-4">
              <h6 className="fw-semibold text-primary">Post Graduation</h6>
              <div className="row">
                <div className="col-md-6">
                  <p><strong>Degree:</strong> {profile.post_graduation || 'Not specified'}</p>
                  <p><strong>University:</strong> {profile.post_graduation_university || 'Not specified'}</p>
                </div>
                <div className="col-md-6">
                  <p><strong>Year:</strong> {profile.post_graduation_year || 'Not specified'}</p>
                  <p><strong>CGPA:</strong> {profile.post_graduation_cgpa || 'Not specified'}</p>
                </div>
        </div>
      </div>

            {/* 12th & 10th */}
            <div className="education-section">
              <h6 className="fw-semibold text-primary">Secondary Education</h6>
              <div className="row">
                <div className="col-md-6">
                  <p><strong>HSC Year:</strong> {profile.hsc_year || 'Not specified'}</p>
                  <p><strong>HSC Marks:</strong> {profile.hsc_marks || 'Not specified'}%</p>
                </div>
                <div className="col-md-6">
                  <p><strong>SSC Year:</strong> {profile.ssc_year || 'Not specified'}</p>
                  <p><strong>SSC Marks:</strong> {profile.ssc_marks || 'Not specified'}%</p>
                </div>
              </div>
            </div>
          </div>
        ) : (
          <div>
            {/* Graduation Form */}
            <div className="mb-4">
              <h6 className="fw-semibold text-primary mb-3">Graduation</h6>
              <div className="row">
                <div className="col-md-6">
                  <div className="mb-3">
                    <label className="form-label">Degree</label>
                    <input
                      type="text"
                      className="form-control"
                      value={formData.graduation || ''}
                      onChange={(e) => handleInputChange('graduation', e.target.value)}
                      placeholder="B.Tech, B.E., B.Sc, etc."
                    />
                  </div>
                  <div className="mb-3">
                    <label className="form-label">University/College</label>
                    <input
                      type="text"
                      className="form-control"
                      value={formData.graduation_university || ''}
                      onChange={(e) => handleInputChange('graduation_university', e.target.value)}
                    />
                  </div>
                </div>
                <div className="col-md-6">
                  <div className="mb-3">
                    <label className="form-label">Year</label>
                    <input
                      type="number"
                      className="form-control"
                      value={formData.graduation_year || ''}
                      onChange={(e) => handleInputChange('graduation_year', e.target.value)}
                      min="1990"
                      max="2030"
                    />
                  </div>
                  <div className="mb-3">
                    <label className="form-label">CGPA</label>
                    <input
                      type="number"
                      step="0.01"
                      className="form-control"
                      value={formData.graduation_cgpa || ''}
                      onChange={(e) => handleInputChange('graduation_cgpa', e.target.value)}
                      min="0"
                      max="10"
                    />
                  </div>
                </div>
        </div>
      </div>

            {/* Post Graduation Form */}
            <div className="mb-4">
              <h6 className="fw-semibold text-primary mb-3">Post Graduation</h6>
              <div className="row">
                <div className="col-md-6">
                  <div className="mb-3">
                    <label className="form-label">Degree</label>
                    <input
                      type="text"
                      className="form-control"
                      value={formData.post_graduation || ''}
                      onChange={(e) => handleInputChange('post_graduation', e.target.value)}
                      placeholder="M.Tech, M.E., M.Sc, MBA, etc."
                    />
                  </div>
                  <div className="mb-3">
                    <label className="form-label">University/College</label>
                    <input
                      type="text"
                      className="form-control"
                      value={formData.post_graduation_university || ''}
                      onChange={(e) => handleInputChange('post_graduation_university', e.target.value)}
                    />
                  </div>
                </div>
                <div className="col-md-6">
                  <div className="mb-3">
                    <label className="form-label">Year</label>
                    <input
                      type="number"
                      className="form-control"
                      value={formData.post_graduation_year || ''}
                      onChange={(e) => handleInputChange('post_graduation_year', e.target.value)}
                      min="1990"
                      max="2030"
                    />
                  </div>
                  <div className="mb-3">
                    <label className="form-label">CGPA</label>
                    <input
                      type="number"
                      step="0.01"
                      className="form-control"
                      value={formData.post_graduation_cgpa || ''}
                      onChange={(e) => handleInputChange('post_graduation_cgpa', e.target.value)}
                      min="0"
                      max="10"
                    />
                  </div>
                </div>
          </div>
      </div>

            {/* Secondary Education Form */}
            <div>
              <h6 className="fw-semibold text-primary mb-3">Secondary Education</h6>
              <div className="row">
                <div className="col-md-6">
                  <div className="mb-3">
                    <label className="form-label">HSC Year</label>
                    <input
                      type="number"
                      className="form-control"
                      value={formData.hsc_year || ''}
                      onChange={(e) => handleInputChange('hsc_year', e.target.value)}
                      min="1990"
                      max="2030"
                    />
                  </div>
                  <div className="mb-3">
                    <label className="form-label">HSC Marks (%)</label>
                    <input
                      type="number"
                      step="0.01"
                      className="form-control"
                      value={formData.hsc_marks || ''}
                      onChange={(e) => handleInputChange('hsc_marks', e.target.value)}
                      min="0"
                      max="100"
                    />
                  </div>
                </div>
                <div className="col-md-6">
                  <div className="mb-3">
                    <label className="form-label">SSC Year</label>
                    <input
                      type="number"
                      className="form-control"
                      value={formData.ssc_year || ''}
                      onChange={(e) => handleInputChange('ssc_year', e.target.value)}
                      min="1990"
                      max="2030"
                    />
                  </div>
                  <div className="mb-3">
                    <label className="form-label">SSC Marks (%)</label>
                    <input
                      type="number"
                      step="0.01"
                      className="form-control"
                      value={formData.ssc_marks || ''}
                      onChange={(e) => handleInputChange('ssc_marks', e.target.value)}
                      min="0"
                      max="100"
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
}
